name: CI Pipeline

on:
  push:
    branches:
      - main

env:
  MONGO_URI: ${{ secrets.MONGO_URI }}
  MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    runs-on: ${{ matrix.operating_system }}
    strategy:
      matrix:
        nodejs_version: [18, 20]
        operating_system: [ubuntu-latest]
        exclude:
          - nodejs_version: 18
            operating_system: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodejs_version }}

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        id: nodejs-condition
        run: npm test

      - name: Archive Test Result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result-Node${{ matrix.nodejs_version }}
          path: test-results.xml

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: unit-testing

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Coverage Result
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-Result-${{ github.run_id }}
          path: coverage

  docker-containerization:
    name: Docker Containerization
    needs: code-coverage
    permissions:
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: |
          echo "Pulling Docker image..."
          docker pull ghcr.io/${{ github.repository_owner }}/my-app:latest

      - name: Run Docker Container (with logs)
        run: |
          docker run --name solar-system-app -p 3000:3000 \
            -e MONGO_URI=${{ secrets.MONGO_URI }} \
            -e MONGO_USERNAME=${{ secrets.MONGO_USERNAME }} \
            -e MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            ghcr.io/${{ github.repository_owner }}/my-app:latest

      - name: Wait and show logs
        run: |
          echo "Waiting 10 seconds for container to initialize..."
          sleep 10
          docker logs solar-system-app || echo "No logs available"

      - name: Stop and Remove Container
        run: |
          docker stop solar-system-app
          docker rm solar-system-app
